#include<stdio.h>
#include<stdlib.h>
#define MAX 5
struct queue
{
int f,r,a[MAX];
};
typedef struct queue QUEUE;
int isempty(QUEUE *q)
{
if(q->f==-1)
return 1;
else
return 0;
}
int isfull(QUEUE *q)
{
if(q->r==MAX-1)
return 1;
else
return 0;
}
void qinsert(QUEUE *q, int x)
{
	if(isfull(q))
		printf("\nOVERFLOW\n");
	else
	{
		if(q->f==-1 && q->r==-1)
			{	
				q->f=0;q->r=0;
			}	
		else
			q->r=q->r+1;
		q->a[q->r]=x;
	}
}
void qdelete(QUEUE *q)
{
	int x;
	if(isempty(q))
		printf("\nUNDERFLOW\n");
	else
	{
		x=q->a[q->f];
		if(q->f==q->r)
			q->f=q->r=-1;
		else
			q->f++;
		printf("\nItem Deleted=%d",x);
	}
}
void display(QUEUE *q)
{
int i;
if(isempty(q))
		printf("\nQueue Is Empty\n");
else
{	
printf("\nElements in the queue are:\n");
for(i=q->f;i<=q->r;i++)
printf("%d\t",q->a[i]);
printf("\n\n");
}
}
void main()
{
struct queue q;
int item,option;
q.f=-1;q.r=-1;
do
{
printf("\nPRESS:\n1->INSERT\n2->DELETE\n3->DISPLAY\n4->EXIT\nEnter your chice:\n");
scanf("%d",&option);
switch(option)
{
case 1: printf("\nEnter Item:\n");
        scanf("%d",&item);
        qinsert(&q,item);
        display(&q);
		break;
case 2: qdelete(&q);display(&q);break;
case 3: display(&q);break;
case 4:exit(0);
default:printf("\nWrong Choice\n");
}
}while(option<4);
}





